<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="kr.co.loyd.dao.ReviewsDao">


	<!-- 구매 후기 보기(없어도될?) -->
	<select id="one" parameterType="int" resultType="kr.co.loyd.dto.ReviewsDto">
		select * from reviews where Review_id = #{id}
	</select>
	


	<!-- 구매 후기 작성 -->
	<insert id = "writeOk1" parameterType="kr.co.loyd.dto.ReviewWriteDto">
		insert into reviews(member_id, watch_id, content, writeday, rate)
		values(#{member_id},#{watch_id},#{content}, now(),#{rate})
	
	</insert>
	<!-- 구매 후기 작성 (파일있는 경우) -->
	<insert id="writeOk2" parameterType="kr.co.loyd.dto.ReviewWriteDto">
		insert into
		reviews(member_id, watch_id, content, writeday, rate, file_id)
		values(#{member_id},#{watch_id},#{content}, now(),#{rate}, #{file_id})
	</insert>
	
	
	
	
	
	<select id="get_pagecount" resultType="Integer">
		select ceil (count(*)/10) from reviews where ${param1} like concat('%', #{param2} ,'%')				
	</select>
	<select id="list2" resultType="kr.co.loyd.dto.ReviewsDto">
        SELECT r.*, m.id, m.name AS mname, af.*, w.id AS wid, w.name AS wname, w.brand, w.category,
        (select count(*) from `like` l where l.review_id = r.review_id) `like`
        
        from reviews  r
        
        LEFT JOIN add_file af
        ON r.file_id = af.id 
        
        LEFT JOIN member m
        ON r.member_id = m.id
        
        LEFT JOIN  watch w
        ON r.watch_id = w.id
        
        where r.${param1} like concat('%', #{param2}, '%')
        order by review_id DESC
        limit
        #{param3}, 10
    </select>
	
	<update id="readnum"> <!-- result, parameter -->
		update reviews set view=view+1 where review_id=#{param1}
	</update>
	

	

	<select id="content" resultType="kr.co.loyd.dto.ReviewsDto">
		SELECT r.*, m.id, m.name AS mname, af.* from reviews  r
		LEFT JOIN add_file af

		ON r.file_id = af.id 

		LEFT JOIN member m
		ON r.member_id = m.id

		where review_id=#{param1}
	</select>
	
	<!-- 좋아요(추천)기능 -->
	<select id="likeCount" resultType="int">
		select count(*) from `like`
		where member_id = #{param1} and
		review_id = #{param2}
	</select>
	
	<select id="reviewLikeCount" resultType="int">
		select count(*) from `like`
		where review_id  = #{param1}
	</select>
	
	<insert id="addLike">
		insert into `like` (member_id, review_id )
		values (#{param1}, #{param2})	
	</insert>
	
	<delete id="subLike">
		delete from `like`
		where review_id = #{param2}
	</delete>
	
	
	<delete id="delete">
		delete from reviews where review_id=#{param1}
	</delete>
	
	
	<select id="update" resultType="kr.co.loyd.dto.ReviewsDto">
		select * from reviews r
		left join add_file af
		on r.file_id = af.id
		where review_id=#{param1}
	</select>
	
	<!-- 수정 (파일 없는 경우) -->
	<update id="update_ok1" parameterType="kr.co.loyd.dto.ReviewsDto">
		update reviews set 
		content=#{content},
		rate=#{rate}
		where review_id=#{review_id}	 
	</update>
	<!-- 수정 (파일 없는 경우) -->
	<update id="update_ok2" parameterType="kr.co.loyd.dto.ReviewsDto"> 
		update reviews set
		file_id=#{file_id},
		content=#{content},
		rate=#{rate}
		where review_id=#{review_id}
	</update>
	

	
	<!-- 대시보드 목록 조회 -->
	<select id="dash_listr" resultType="kr.co.loyd.dto.ReviewsDto">
		select content,writeday from reviews order by writeday desc limit 0,5
	</select>
	
	<!-- 대시보드 그래프 : 리뷰글 총 합계   -->
	<select id="totr" resultType="String">
	 	select count(*)from reviews;
	</select>
	
	

	


</mapper>















